rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // For debugging purposes - temporarily allow all reads and writes
    // IMPORTANT: Remove this rule after debugging is complete
    match /{document=**} {
      allow read, write: if true;
    }
    
    // Allow users to read and write their own user data
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin");
    }
    
    // Allow users to read and write their own user preferences
    match /userPreferences/{userId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow users to read and write their own userData - making this more permissive
    match /userData/{userId} {
      allow read, write: if true; // Temporarily allow all access for testing
    }
    
    // Allow access to leadData collection - this is what's missing
    match /leadData/{userId} {
      allow read, write: if true; // Temporarily allow all access for testing
    }
    
    // Allow builders to read leads assigned to them, and admins to read all leads
    match /leads/{leadId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
      // Allow builders to update their own leads but not delete them
      allow update: if request.auth != null && resource.data.builderId == request.auth.uid;
    }
    
    // Allow admins to access and modify admin preferences
    match /adminPreferences/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }
  }
}